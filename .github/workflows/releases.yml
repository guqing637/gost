name: CI
on:
  push:
    branches: [ releases ]
  pull_request:
    branches: [ releases ]
  schedule:
    - cron: '0 */120 * * *'
jobs:
  Ubuntu:
    runs-on: ubuntu-18.04
    steps:
    - name: Prepare
      id: prepare
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
        elif [[ $GITHUB_REF == refs/heads/master ]]; then
          echo ::set-output name=version::latest
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          echo ::set-output name=version::${GITHUB_REF#refs/heads/}
        else
          echo ::set-output name=version::snapshot
        fi
        echo ::set-output name=builddate::date '+%Y%m%d%H%M%S'
    - name: Environment
      run: |
        echo git_ref=$GITHUB_REF
        echo git_sha=$GITHUB_SHA
        echo version=${{steps.prepare.outputs.version}}
        echo builddate=${{steps.prepare.outputs.builddate}}
      # https://github.com/actions/checkout
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build Gost
      id: build_gost
      run: |
        builddate=${{steps.prepare.outputs.builddate}}
        echo -n IyEvYmluL2Jhc2gKZXhwb3J0IFRFUk09bGludXgKZXhwb3J0IENJSE9NRT0kUFdECmV4cG9ydCBMRF9MSUJSQVJZX1BBVEg9JENJSE9NRTokTERfTElCUkFSWV9QQVRICmV4cG9ydCBQQVRIPSRDSUhPTUU6JFBBVEgKc3VkbyBhcHQgdXBkYXRlIC15CnN1ZG8gYXB0IHVwZ3JhZGUgLXkKc3VkbyBhcHQgYXV0b3JlbW92ZSAteQpzdWRvIGFwdCBpbnN0YWxsIGJhc2ggd2dldCBjdXJsIHVuemlwIHppcCB0YXIgYnVzeWJveCB2aW0gbmFubyBnaXQgcHl0aG9uIHFlbXUtc3lzdGVtIG1pbmd3LXc2NCBub2RlanMgcHl0aG9uMyBtaXJlZG8gbWlyZWRvLXNlcnZlciBudHBkYXRlIC15CnN1ZG8gbnRwZGF0ZSBwb29sLm50cC5vcmcKd2dldCBodHRwczovL2RsLmdvb2dsZS5jb20vYW5kcm9pZC9yZXBvc2l0b3J5L2FuZHJvaWQtbmRrLXIyMWItbGludXgteDg2XzY0LnppcCAtTyAkQ0lIT01FL25kay56aXAKdW56aXAgJENJSE9NRS9uZGsuemlwCnJtIC1yZiAkQ0lIT01FL25kay56aXAKZXhwb3J0IE5ES0hPTUU9JENJSE9NRS9hbmRyb2lkLW5kay1yMjFiCiROREtIT01FL2J1aWxkL3Rvb2xzL21ha2Utc3RhbmRhbG9uZS10b29sY2hhaW4uc2ggLS1pbnN0YWxsLWRpcj0kQ0lIT01FL2FuZHJvaWQvYXJtIC0tYXJjaD1hcm0gLS1wbGF0Zm9ybT1hbmRyb2lkLTI4CiROREtIT01FL2J1aWxkL3Rvb2xzL21ha2Utc3RhbmRhbG9uZS10b29sY2hhaW4uc2ggLS1pbnN0YWxsLWRpcj0kQ0lIT01FL2FuZHJvaWQvYXJtNjQgLS1hcmNoPWFybTY0IC0tcGxhdGZvcm09YW5kcm9pZC0yOAokTkRLSE9NRS9idWlsZC90b29scy9tYWtlLXN0YW5kYWxvbmUtdG9vbGNoYWluLnNoIC0taW5zdGFsbC1kaXI9JENJSE9NRS9hbmRyb2lkL3g4NiAtLWFyY2g9eDg2IC0tcGxhdGZvcm09YW5kcm9pZC0yOAokTkRLSE9NRS9idWlsZC90b29scy9tYWtlLXN0YW5kYWxvbmUtdG9vbGNoYWluLnNoIC0taW5zdGFsbC1kaXI9JENJSE9NRS9hbmRyb2lkL3g4Nl82NCAtLWFyY2g9eDg2XzY0IC0tcGxhdGZvcm09YW5kcm9pZC0yOApleHBvcnQgUEFUSD0kTkRLSE9NRTokQ0lIT01FL2FuZHJvaWQvYXJtL2JpbjokQ0lIT01FL2FuZHJvaWQvYXJtNjQvYmluOiRDSUhPTUUvYW5kcm9pZC94ODYvYmluOiRDSUhPTUUvYW5kcm9pZC94ODZfNjQvYmluOiRQQVRICndnZXQgaHR0cHM6Ly9nb2xhbmcub3JnL2RsL2dvMS4xNi4zLmxpbnV4LWFtZDY0LnRhci5neiAtTyAkQ0lIT01FL2dvLnRhci5negp0YXIgLXp4ZiAkQ0lIT01FL2dvLnRhci5negpybSAtcmYgJENJSE9NRS9nby50YXIuZ3oKZXhwb3J0IEdPUk9PVD0kQ0lIT01FL2dvCm1rZGlyIC1wICRDSUhPTUUvZ29sYW5nCmV4cG9ydCBHT1BBVEg9JENJSE9NRS9nb2xhbmcKZXhwb3J0IFBBVEg9JEdPUk9PVC9iaW46JFBBVEgKY2htb2QgLVIgMDc3MCAkQ0lIT01FLyoKCmNkICRDSUhPTUUvY21kL2dvc3QKbWtkaXIgLXAgJENJSE9NRS9jbWQvZ29zdC9idWlsZAoKZ28gZW52IC13IEdPMTExTU9EVUxFPW9uCmdvIGVudiAtdyBHT1BST1hZPWh0dHBzOi8vcHJveHkuZ29sYW5nLm9yZyxkaXJlY3QKQ0M9YXJtLWxpbnV4LWFuZHJvaWRlYWJpLWdjYyBDWFg9YXJtLWxpbnV4LWFuZHJvaWRlYWJpLWcrKyBBUj1hcm0tbGludXgtYW5kcm9pZGVhYmktYXIgQ0dPX0VOQUJMRUQ9MSBHT09TPWFuZHJvaWQgR09BUkNIPWFybSBnbyBidWlsZCAtbyBidWlsZC9hbmRyb2lkL2FybS9nb3N0CkNDPWFhcmNoNjQtbGludXgtYW5kcm9pZC1nY2MgQ1hYPWFhcmNoNjQtbGludXgtYW5kcm9pZC1nKysgQVI9YWFyY2g2NC1saW51eC1hbmRyb2lkLWFyIENHT19FTkFCTEVEPTEgR09PUz1hbmRyb2lkIEdPQVJDSD1hcm02NCBnbyBidWlsZCAtbyBidWlsZC9hbmRyb2lkL2FybTY0L2dvc3QKQ0M9aTY4Ni1saW51eC1hbmRyb2lkLWdjYyBDWFg9aTY4Ni1saW51eC1hbmRyb2lkLWcrKyBBUj1pNjg2LWxpbnV4LWFuZHJvaWQtYXIgQ0dPX0VOQUJMRUQ9MSBHT09TPWFuZHJvaWQgR09BUkNIPTM4NiBnbyBidWlsZCAtbyBidWlsZC9hbmRyb2lkLzM4Ni9nb3N0CkNDPXg4Nl82NC1saW51eC1hbmRyb2lkLWdjYyBDWFg9eDg2XzY0LWxpbnV4LWFuZHJvaWQtZysrIEFSPXg4Nl82NC1saW51eC1hbmRyb2lkLWFyIENHT19FTkFCTEVEPTEgR09PUz1hbmRyb2lkIEdPQVJDSD1hbWQ2NCBnbyBidWlsZCAtbyBidWlsZC9hbmRyb2lkL2FtZDY0L2dvc3QKQ0dPX0VOQUJMRUQ9MCBHT09TPWxpbnV4IEdPQVJDSD1hcm0gZ28gYnVpbGQgLW8gYnVpbGQvbGludXgvYXJtL2dvc3QKQ0dPX0VOQUJMRUQ9MCBHT09TPWxpbnV4IEdPQVJDSD1hcm02NCBnbyBidWlsZCAtbyBidWlsZC9saW51eC9hcm02NC9nb3N0CkNHT19FTkFCTEVEPTAgR09PUz1saW51eCBHT0FSQ0g9Mzg2IGdvIGJ1aWxkIC1vIGJ1aWxkL2xpbnV4LzM4Ni9nb3N0CkNHT19FTkFCTEVEPTAgR09PUz1saW51eCBHT0FSQ0g9YW1kNjQgZ28gYnVpbGQgLW8gYnVpbGQvbGludXgvYW1kNjQvZ29zdApDQz1pNjg2LXc2NC1taW5ndzMyLWdjYyBDWFg9aTY4Ni13NjQtbWluZ3czMi1nKysgQVI9aTY4Ni13NjQtbWluZ3czMi1hciBHT0VYRT0uZXhlIENHT19FTkFCTEVEPTEgR09PUz13aW5kb3dzIEdPQVJDSD0zODYgZ28gYnVpbGQgLW8gYnVpbGQvd2luZG93cy8zODYvZ29zdC5leGUKQ0M9eDg2XzY0LXc2NC1taW5ndzMyLWdjYyBDWFg9eDg2XzY0LXc2NC1taW5ndzMyLWcrKyBBUj14ODZfNjQtdzY0LW1pbmd3MzItYXIgR09FWEU9LmV4ZSBDR09fRU5BQkxFRD0xIEdPT1M9d2luZG93cyBHT0FSQ0g9YW1kNjQgZ28gYnVpbGQgLW8gYnVpbGQvd2luZG93cy9hbWQ2NC9nb3N0LmV4ZQpjZCBidWlsZAp6aXAgLXIgZ29zdC0kYnVpbGRkYXRlLnppcCAuLyoKZWNobyAiYnVpbGQgZGF0ZTokYnVpbGRkYXRlIgo= | base64 -d > buildgost.sh
        chmod -R 0770 buildgost.sh
        ./buildgost.sh
      shell: bash
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
      with:
        tag_name: v2.11.1-${{steps.prepare.outputs.builddate}}
        release_name: v2.11.1-${{steps.prepare.outputs.builddate}}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./cmd/gost/build/gost-${{steps.prepare.outputs.builddate}}.zip
        asset_name: gost-${{steps.prepare.outputs.builddate}}.zip
        asset_content_type: application/zip